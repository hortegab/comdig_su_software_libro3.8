options:
  parameters:
    author: Homero Ortega Boada
    catch_exceptions: 'True'
    category: Custom
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: dale un valor a Eb/No, corre el flujograma y obten la SER. Puedes
      sacar tantos valores como para construir una curva de SER
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: ser_simulation
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: run_stop
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: SER Simulation
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 12]
    rotation: 0
    state: enabled

blocks:
- name: Bps
  id: variable
  parameters:
    comment: ''
    value: int(math.log(M,2))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 12]
    rotation: 0
    state: enabled
- name: EbN0
  id: variable
  parameters:
    comment: ''
    value: '28'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 12]
    rotation: 0
    state: enabled
- name: M
  id: variable
  parameters:
    comment: ''
    value: int(len(const))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 12]
    rotation: 0
    state: enabled
- name: MaxCount
  id: variable
  parameters:
    comment: ''
    value: int(1e7)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 12]
    rotation: 0
    state: enabled
- name: MaxErrors
  id: variable
  parameters:
    comment: ''
    value: 1e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [360, 68]
    rotation: 0
    state: enabled
- name: MiconstellationObject
  id: variable_constellation
  parameters:
    comment: ''
    const_points: const
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    precision: '8'
    rot_sym: '4'
    soft_dec_lut: None
    sym_map: mapa
    type: calcdist
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1111, 8]
    rotation: 0
    state: enabled
- name: Rb
  id: variable
  parameters:
    comment: ''
    value: Rs*Bps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1232, 468]
    rotation: 0
    state: disabled
- name: Rs
  id: variable
  parameters:
    comment: ''
    value: samp_rate/Sps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1136, 468]
    rotation: 0
    state: disabled
- name: Sps
  id: variable
  parameters:
    comment: ''
    value: '16'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1312, 468]
    rotation: 0
    state: disabled
- name: const
  id: variable
  parameters:
    comment: ''
    value: (digital.constellation_bpsk(), digital.constellation_qpsk(), digital.constellation_8psk(),
      digital.qam.qam_constellation(16))
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 213]
    rotation: 0
    state: disabled
- name: const
  id: variable
  parameters:
    comment: ''
    value: '[(1.+0.j),(0.+1.j),(-1.+0.j),(0.-1.j)]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 325]
    rotation: 0
    state: disabled
- name: const
  id: variable
  parameters:
    comment: ''
    value: '[(1+1.j)/4.24,(3+1.j)/4.24,(3+3.j)/4.24,(1+3.j)/4.24,(-1+1.j)/4.24,(-3+1.j)/4.24,(-3+3.j)/4.24,(-1+3.j)/4.24,(-1-1.j)/4.24,(-3-1.j)/4.24,(-3-3.j)/4.24,(-1-3.j)/4.24,(1-1.j)/4.24,(3-1.j)/4.24,(3-3.j)/4.24,(1-3.j)/4.24]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 68]
    rotation: 0
    state: enabled
- name: const
  id: variable
  parameters:
    comment: ''
    value: '[(1.+0.j),(0.7071+0.7071j),(0.+1.j),(-0.7071+0.7071j),(-1.+0.j),(-0.7071-0.7071j),(0.-1.j),(0.7071-0.7071j)]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1120, 269]
    rotation: 0
    state: disabled
- name: mapa
  id: variable
  parameters:
    comment: ''
    value: np.arange(M)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [600, 10]
    rotation: 0
    state: enabled
- name: run_stop
  id: variable_qtgui_check_box
  parameters:
    comment: ''
    'false': 'False'
    gui_hint: 0,0,1,1
    label: Inicial/Parar
    'true': 'True'
    type: int
    value: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1112, 112]
    rotation: 180
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 100e3
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 12]
    rotation: 0
    state: enabled
- name: BER
  id: epy_block
  parameters:
    Errors_max: MaxErrors
    Sym_max: MaxCount
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\n###########################################################################\n\
      ##       lo de arriba era puro encabezado. Aqui comienza la clase        ##\n\
      ###########################################################################\n\
      class mi_bloque_embebido(gr.sync_block):\n\n    \"\"\"\nEste es el codigo embebido\
      \ del bloque e_Symbol Rate\nHecho por: Homero Ortega Boada\nProfesor de la Universidad\
      \ Industrial de Santander\n\nFuncionalidad:\nLas entradas: son dos, para la\
      \ senal transmitida y la recibida.\n\nSalidas: \nout0: Entrega el numero de\
      \ simbolos tenidos en cuenta\nout1: Entrega el numero de errores identificado\n\
      out2: Entrega la SER (Symbol Error Ratio).\n  \nEs importante tener en cuenta\
      \ que: \n- si en vez de tener simbolos a la entrada, se tienen bits, entonces\
      \ lo que se calcula es la BER (Bit Error Ratio)\n\nParametros usados:\nNbmax:\
      \ es el maximo numero de bits transmitidos a tener en cuenta para el calculo.\
      \ Este numero depende de la resolucion que se pretenda alcanzar en la medicion.\
      \ Si por ejemplo tu deseas que la BER llegue a valores tan pequenos como 1e-6,\
      \ entonces debera elegir Nbmax=1e+6\nError Max: Es el numero maximo de errores\
      \ a tener en cuenta. Este numero depende del grado de exactitud que se desee\
      \ lograr, del grado de estabilidad que alcanza el calculo de la BER o la SER.\
      \ Un buen valor puede ser Errors=100 o mas. La idea es que el sistema dejara\
      \ de realizar calculos cuando el contador de simbolos procesados alcanza Nbmax\
      \ o cuando el contador de simbolos erroneos alcanza Error_max\n\"\"\"\n\n  \
      \  def __init__(self, Sym_max=1e6,Errors_max=1e4):  # only default arguments\
      \ here\n        gr.sync_block.__init__(\n            self,\n            name='e_Symbol\
      \ Rate',\n            in_sig=[np.int8,np.int8],\n            out_sig=[np.float32,np.float32,np.float32]\n\
      \        )\n        self.Sym_max = Sym_max\n        self.Errors_max=Errors_max\n\
      \        self.errores = 0.\n        self.count=0.\n        self.BER=1.\n\n \
      \   ###########################################################################\n\
      \    ##  lo de arriba era puro iniciacion. Aqui comienza el verdadero codigo\
      \  ##\n    ###########################################################################\n\
      \    def work(self, input_items, output_items):\n        in0=input_items[0]\n\
      \        in1=input_items[1]\n        out0=output_items[0]\n        out1=output_items[1]\n\
      \        out2=output_items[2]\n        if self.errores<self.Errors_max:\n  \
      \          if self.count < self.Sym_max:\n                self.count += len(in0)\n\
      \                self.errores += np.count_nonzero(in0-in1)\n               \
      \ self.BER=self.errores/self.count\n        out2[:]=self.BER\n        out1[:]=self.errores\n\
      \        out0[:]=self.count\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: '(''e_Symbol Rate'', ''mi_bloque_embebido'', [(''Sym_max'', ''1000000.0''),
      (''Errors_max'', ''10000.0'')], [(''0'', ''byte'', 1), (''1'', ''byte'', 1)],
      [(''0'', ''float'', 1), (''1'', ''float'', 1), (''2'', ''float'', 1)], ''\nEste
      es el codigo embebido del bloque e_Symbol Rate\nHecho por: Homero Ortega Boada\nProfesor
      de la Universidad Industrial de Santander\n\nFuncionalidad:\nLas entradas: son
      dos, para la senal transmitida y la recibida.\n\nSalidas: \nout0: Entrega el
      numero de simbolos tenidos en cuenta\nout1: Entrega el numero de errores identificado\nout2:
      Entrega la SER (Symbol Error Ratio).\n  \nEs importante tener en cuenta que:
      \n- si en vez de tener simbolos a la entrada, se tienen bits, entonces lo que
      se calcula es la BER (Bit Error Ratio)\n\nParametros usados:\nNbmax: es el maximo
      numero de bits transmitidos a tener en cuenta para el calculo. Este numero depende
      de la resolucion que se pretenda alcanzar en la medicion. Si por ejemplo tu
      deseas que la BER llegue a valores tan pequenos como 1e-6, entonces debera elegir
      Nbmax=1e+6\nError Max: Es el numero maximo de errores a tener en cuenta. Este
      numero depende del grado de exactitud que se desee lograr, del grado de estabilidad
      que alcanza el calculo de la BER o la SER. Un buen valor puede ser Errors=100
      o mas. La idea es que el sistema dejara de realizar calculos cuando el contador
      de simbolos procesados alcanza Nbmax o cuando el contador de simbolos erroneos
      alcanza Error_max\n'', [''Errors_max'', ''Sym_max''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [176, 416]
    rotation: 180
    state: enabled
- name: analog_noise_source_x
  id: analog_noise_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: 1.0 / math.sqrt(2.0 * Bps * 10**(EbN0/10.))
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    noise_type: analog.GR_GAUSSIAN
    seed: '42'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [451, 254]
    rotation: 0
    state: enabled
- name: analog_random_source_x
  id: analog_random_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    max: M
    maxoutbuf: '0'
    min: '0'
    minoutbuf: '0'
    num_samps: '10000000'
    repeat: 'True'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 140]
    rotation: 0
    state: enabled
- name: blocks_add_xx
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [646, 310]
    rotation: 270
    state: enabled
- name: blocks_throttle
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 164]
    rotation: 0
    state: enabled
- name: digital_chunks_to_symbols_xx
  id: digital_chunks_to_symbols_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    dimension: '1'
    in_type: byte
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    out_type: complex
    symbol_table: const
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [407, 164]
    rotation: 0
    state: enabled
- name: digital_constellation_decoder_cb_0
  id: digital_constellation_decoder_cb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: MiconstellationObject
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [359, 393]
    rotation: 180
    state: enabled
- name: import
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 76]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [553, 78]
    rotation: 0
    state: enabled
- name: qtgui_const_sink_x_0
  id: qtgui_const_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '0.6'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: '"blue"'
    color10: '"red"'
    color2: '"red"'
    color3: '"red"'
    color4: '"red"'
    color5: '"red"'
    color6: '"red"'
    color7: '"red"'
    color8: '"red"'
    color9: '"red"'
    comment: ''
    grid: 'False'
    gui_hint: 1,2,1,1
    label1: Rx
    label10: ''
    label2: Tx
    label3: ''
    label4: ''
    label5: ''
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    legend: 'True'
    marker1: '0'
    marker10: '0'
    marker2: '0'
    marker3: '0'
    marker4: '0'
    marker5: '0'
    marker6: '0'
    marker7: '0'
    marker8: '0'
    marker9: '0'
    name: '"Constelacion"'
    nconnections: '2'
    size: '1024'
    style1: '0'
    style10: '0'
    style2: '0'
    style3: '0'
    style4: '0'
    style5: '0'
    style6: '0'
    style7: '0'
    style8: '0'
    style9: '0'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    xmax: '2'
    xmin: '-2'
    ymax: '2'
    ymin: '-2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 1228]
    rotation: 0
    state: disabled
- name: qtgui_number_sink_0_0_0_0
  id: qtgui_number_sink
  parameters:
    affinity: ''
    alias: ''
    autoscale: 'True'
    avg: '0'
    color1: ("black", "black")
    color10: ("black", "black")
    color2: ("blue", "red")
    color3: ("black", "white")
    color4: ("blue", "red")
    color5: ("black", "black")
    color6: ("black", "black")
    color7: ("black", "black")
    color8: ("black", "black")
    color9: ("black", "black")
    comment: ''
    factor1: '1'
    factor10: '1'
    factor2: '1'
    factor3: '1'
    factor4: '1'
    factor5: '1'
    factor6: '1'
    factor7: '1'
    factor8: '1'
    factor9: '1'
    graph_type: qtgui.NUM_GRAPH_VERT
    gui_hint: 1,0,1,1
    label1: Simbolos Procesados
    label10: ''
    label2: Errores encontrados
    label3: BER
    label4: SER
    label5: log10(SER)
    label6: ''
    label7: ''
    label8: ''
    label9: ''
    max: MaxCount
    min: '0'
    name: '""'
    nconnections: '3'
    type: float
    unit1: ''
    unit10: ''
    unit2: ''
    unit3: ''
    unit4: ''
    unit5: ''
    unit6: ''
    unit7: ''
    unit8: ''
    unit9: ''
    update_time: '0.10'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [0, 416]
    rotation: 180
    state: enabled
- name: vs6
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: RX2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 1220]
    rotation: 0
    state: disabled
- name: vs6_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: TX2
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 1276]
    rotation: 0
    state: disabled

connections:
- [BER, '0', qtgui_number_sink_0_0_0_0, '0']
- [BER, '1', qtgui_number_sink_0_0_0_0, '1']
- [BER, '2', qtgui_number_sink_0_0_0_0, '2']
- [analog_noise_source_x, '0', blocks_add_xx, '1']
- [analog_random_source_x, '0', blocks_throttle, '0']
- [blocks_add_xx, '0', digital_constellation_decoder_cb_0, '0']
- [blocks_throttle, '0', BER, '1']
- [blocks_throttle, '0', digital_chunks_to_symbols_xx, '0']
- [digital_chunks_to_symbols_xx, '0', blocks_add_xx, '0']
- [digital_constellation_decoder_cb_0, '0', BER, '0']
- [vs6, '0', qtgui_const_sink_x_0, '0']
- [vs6_0, '0', qtgui_const_sink_x_0, '1']

metadata:
  file_format: 1
